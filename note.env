Today tasks:
1. create tabs of sliders
2. add brand, primary image, secondary image, primaryCategory... to category model //like in noon website
3. add campaign to home screen like in idealz.com
4. add advertisig boards in home page
5. create reviews schema/ manager
6. create products page
7. live chat
8. add chatbox rate and rate note
9. 
10. 
11. add about us, return policy..
12. 
13. implement image and product to sub sidebar
14. add links to banners on homescreen
15. implement filter, search, and pagination, and arrange
16. github app
17. 
18. آیا قیمت مناسبتری سراغ دارید؟ بلی | خیر
19. create add to wish list, view more, share in whatsapp in quick view and whatsapp
20. implement factor/invoice for user orders in profile
21. put quantity as badge in place order screen
22. rate & reviews manager


Employee management:
_id, title, FullName, jobtitle{driver, cleaner, customerService, worker, officer}, jobDescription, phone#, address, contracted: true/false, contractType,
salary: {Type: monthly/hourly/commission/bonus/orderly, rate}
availability {type: fullTime/partial/orderly, DateTime: [...{day, from, to}]
missions: {title, time, date, status}

[] orders management:

placedOn: {time, date},
assignedTo: {title, name, time, date},

user: {_id, name, phone},

payment: {
    method: {_id, title: creditCard/cash, charge},
    assignedTo: {jobTitle, name, time, date},
    address: {BankName, CartHolderName, CartNumber, expiryDate, Cvv2}/deliveryAddress/prepareOrder,
    doneBy: {jobTitle, name, time, date, status: pending/paid/unpaid}
}

refundPayment: {
    method: {_id, title: creditCard/cash, charge},
    assignedTo: {jobTitle, name, time, date},
    address: {BankName, CartHolderName, CartNumber, expiryDate, Cvv2}/deliveryAddress/prepareOrder,
    doneBy: {jobTitle, name, time, date, status: pendingrefund/refunded/unrefunded}
}

delivery: {
    method: {_id, title, charge}
    assignedTo: {jobTitle, name, time, date},
    address: {city, region, building},
    deliverOn: {time, date},
    doneBy: {jobTitle, name, time, date, status: pending/delivered/undelivered}
}

refundDelivery: {
    method: {_id, title, charge}
    assignedTo: {jobTitle, name, time, date}
    address: {city, region, building},
    deliverOn: {time, date},
    doneBy: {jobTitle, name, time, date, status: pending/returned/unreturned}
    charge
}

cartItems: {
    assignedTo: {jobTitle, name, time, date},
    [...{_id, nameEn, brand, qty, unit, price}],
    doneBy: {jobTitle, name, time, date, status: pending/returned/unreturned}
}

refundCartItems: {
    assignedTo: {jobTitle, name, time, date},
    [...{_id, nameEn, brand, qty, unit, price}],
    doneBy: {jobTitle, name, time, date, status: pending/returned/unreturned}
}

total: {
    paymentCharge,
    refundPaymentCharge,

    deliveryCharge,
    refundDeliveryCharge,

    cartQuantity,
    refundCartQuantity,

    cartValue,
    refundCartValue,
    
    orderValue,
    refundOrderValue,
}

status: canceled/requested/confirmed/declined/Pending/completed,

if delivered && paid

Note: {Customer, Admin}

youtube: React Image Upload Made Easy

// profile
1. change password
2. edit profile details
3. delivery addresses
4. wallet
5. order history (date, count, value, id, order status, payment status, delivery status)
6. wishlist
7. dashboard

// content marketing

// Add Rate (good, bad) to chatbox and employee details
// attendance:
1. checkout appears if employee have checked in at the same date, otherwise shows check in
2. late check out and early checkin must be confirmed by the manager
3. create a task page for managers approvals and texting
4. late checkout could appear as an action with form where it have request approval submit

// chat details 
1. add user/employee bad rated

// show signed in users in users manager