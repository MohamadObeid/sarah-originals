import mongoose from "mongoose";

const TitleSchema = new mongoose.Schema({
    viewPort: String,
    type: { type: String, default: 'Title' },
    display: String,
    name: String,
    design: String,// 'Classic' },
    borderBottom: String,// '0' },
    border: String,// '0' },
    borderRadius: String,
    backgroundColor: String,
    alignItems: String,//'center' },
    justifyContent: String,// 'space-between' },
    padding: String,// '0' },
    margin: String,
    borderRadius: String,// '0' },
    width: String,
    height: String,
    flexDirection: String,
    position: String,
    transform: String,
    zIndex: String,
    hover: {
        backgroundColor: String,
    },
    title: {
        position: String,
        display: String,
        flexDirection: String,
        transform: String,
        transition: String,
        border: String,// '0' },
        borderRadius: String,
        padding: String,// '0' },
        margin: String,
        backgroundColor: String,
        click: {
            backgroundColor: String,
        },
        hover: {
            backgroundColor: String,
        },
        icon: {
            display: String,
            name: String,
            fontSize: String,
            margin: String,
            color: String,
            name: String,
            code: String,
            textShadow: String,
            click: {
                color: String,
            },
            hover: {
                color: String,
            },
        },
        text: {
            color: String,
            backgroundColor: String,
            borderRadius: String,
            fontSize: String,
            padding: String,
            fontWeight: String,
            width: String,
            textShadow: String,
            click: {
                color: String,
                fontWeight: String,
            },
            hover: {
                color: String,
                fontWeight: String,
            },
        },
        textBorder: {
            display: String,
            position: String,
            top: String,
            right: String,
            bottom: String,
            left: String,
            height: String,
            width: String,
            transform: String,
            borderRadius: String,
            backgroundColor: String,
            transition: String,
            boxShadow: String,
            click: {
                backgroundColor: String,
            },
            hover: {
                backgroundColor: String,
            },
        },
        secondBorder: {
            display: String,
            position: String,
            top: String,
            right: String,
            bottom: String,
            left: String,
            height: String,
            width: String,
            borderRadius: String,
            backgroundColor: String,
            transition: String,
            boxShadow: String,
            transform: String,
            click: {
                backgroundColor: String,
            },
            hover: {
                backgroundColor: String,
            },
        }
    },
    strokeLine: {
        display: String,
        top: String,
        right: String,
        bottom: String,
        left: String,
        height: String,
        width: String,
        borderRadius: String,
        backgroundColor: String,
        click: {
            width: String,
        },
        hover: {
            width: String,
        },
    },
    showAll: {
        display: String,// 'flex' },
        position: String,// 'relative' },
        direction: String,
        padding: String,// '0' },
        margin: String,
        top: String,
        right: String,
        bottom: String,
        left: String,
        text: {
            fontSize: String,// '1.3rem' },
            color: String,// '#00000080' },
            backgroundColor: String,
            border: String,// '0' },
            text: String,// 'show all' },
            textShadow: String,
            fontWeight: String,
            click: {
                color: String,
                fontWeight: String,
            },
            hover: {
                color: String,
                fontWeight: String,
            },
        },
        textBorder: {
            display: String,
            top: String,
            right: String,
            bottom: String,
            left: String,
            height: String,
            width: String,
            borderRadius: String,
            backgroundColor: String,
            transition: String,
            click: {
                backgroundColor: String,
            },
            hover: {
                backgroundColor: String,
            },
        },
        chevron: {
            display: String,// 'flex' },
            color: String,// 'blue' },
            fontSize: String,// '1.9rem' },
            transform: String,
            transition: String,
            click: {
                color: String,
            },
            hover: {
                color: String,
            },
        }
    }
})

const btnStyles = {
    btn: String,
    position: String,
    top: String,
    right: String,
    left: String,
    bottom: String,
    fontSize: String,
    height: String,
    width: String,
    margin: String,
    border: String,
    borderRadius: String,
    color: String,
    backgroundColor: String,
    hoverBackgroundColor: String,
}

const addToCartSchema = new mongoose.Schema({
    SlideBoxPort: String,
    type: { type: String, default: 'AddToCart' },
    name: String,
    display: String,
    margin: String,
    padding: String,
    flexDirection: String,
    position: String,
    top: String,
    right: String,
    add: btnStyles,
    delete: btnStyles,
    plus: btnStyles,
    minus: btnStyles,
    num: btnStyles,
})

const MagicBoxSchema = new mongoose.Schema({
    viewPort: String,
    type: { type: String, default: 'MagicBox' },
    name: { type: String, unique: true },
    overlay: {
        display: String,//'flex' },
        maxWidth: String,
        padding: String,// '0' },
        position: String,
        top: String,
        right: String,
        bottom: String,
        left: String,
        transition: String,
        transform: String,
        zIndex: String,
        overflow: String,
        after: {
            boxShadow: String,
            transform: String,
            transition: String,
            zIndex: String,
        },
    },
    flexDirection: String,
    position: String,
    backgroundColor: String,
    border: String,
    background: {
        isImage: Boolean,//false },
        title: String,//''
        src: String,//''
    },
    paddingAround: String,//'0' },
    paddingBetween: String,// '0' },
    borderRadius: String,// '0.2rem' },
    height: String,//'fit-content' },
    width: String,// 'fit-content' },
    maxWidth: String,
    minWidth: String,
    boxShadow: String,
    canHide: Boolean,
    title: TitleSchema,
    // Timer Bar
    timerBar: {
        display: String,
        position: String,
        height: String,
        width: String,
        top: String,
        right: String,
        bottom: String,
        left: String,
        backgroundColor: String,
        transition: String,
        backgroundImage: String,
        after: {
            transition: String,
        },
    },
    closeBtn: {
        display: String,
        color: String,
        fontSize: String,
        top: String,
        right: String,
        bottom: String,
        left: String,
    },
    slider: [{
        type: { type: String },// 'Image' },
        display: String,// 'none' },
        height: String,// 'auto' },
        width: String,// 'auto' },
        minHeight: String,
        maxHeight: String,
        flexWrap: String,// 'nowrap' },
        border: String,// '0' },
        borderTop: String,
        borderBottom: String,
        borderLeft: String,
        borderRight: String,
        backgroundColor: String,// 'inherit' },
        paddingAround: String,// '0' },
        paddingBetween: String,// '0' },
        overflow: String,// 'hidden' },
        borderRadius: String,// '0.5rem' },
        canHide: Boolean,
        flexDirection: String,
        transition: String,
        justifyContent: String,
        justifySelf: String,
        alignItems: String,
        title: TitleSchema,
        fixBorder: Boolean,
        boxShadow: String,
        // slide
        slide: [{
            isDefault: Boolean,
            index: Number,
            name: String,
            borderRadius: String,// '0' },
            border: String,// '0' },
            height: String,// 'auto' },
            width: String,// 'auto' },
            backgroundColor: String,// 'inherit' },
            flexDirection: String,
            justifyContent: String,// 'flex-start' },
            productVisible: Boolean,
            transform: String,
            transition: String,
            padding: String,
            margin: String,
            boxShadow: String,
            forceWidth: Boolean,
            // slide Title
            title: TitleSchema,
            // image
            image: {
                display: String,
                borderRadius: String,// '0' },
                height: String,// 'auto' },
                width: String,// 'auto' },
                forceWidth: Boolean,//false },
                forceHeight: Boolean,
                animation: Boolean,//true },
                padding: String,
            },
            hover: {
                boxShadow: String,
                zIndex: String
            },
        }],
        // product
        product: {
            display: String,// 'flex' },
            addToCart: addToCartSchema,
            justifyContent: String,// 'flex-start' },
            padding: String,// '1rem' },
            alignItems: String,
            name: {
                fontSize: String,// '1.4rem' },
                color: String,// '#444444' },
                hoverColor: String,// 'blue' },
                textAlign: String,// 'center' },
                fontWeight: String,
                margin: String
            },
            brand: {
                display: String,// 'flex' },
                fontSize: String,// '1.2rem' },
                color: String,// '#444444' },
                hoverColor: String,// 'blue' },
                alignSelf: String,
            },
            priceAndAddToCartWrapper: {
                display: String,
                padding: String,
                flexDirection: String,
                justifyContent: String,
                alignItems: String,
                height: String,
            },
            price: {
                fontSize: String,// '2rem' },
                color: String,// '#444444' },
                hoverColor: String,// 'blue' },
                textAlign: String,// 'center' },
                flexDirection: String,
                padding: String,
                beforeDiscount: {
                    display: String,// 'flex' },
                    fontSize: String,// '1.7rem' },
                    color: String,// '#999999' },
                },
                unit: {
                    display: String,// 'flex' },
                    fontSize: String,// '1.2rem' },
                    color: String,// '#999999' },
                }
            },
            rating: {
                display: String,// 'flex' },
                fontSize: String,// '1.4rem' },
                color: String,// '#444444' },
            },
            reviews: {
                display: String,// 'flex' },
                fontSize: String,// '1.2rem' },
                color: String,// '#444444' },
            },
        },
        // skeleton
        skeleton: {
            fontSize: String,// '1.2rem' },
        },
        // badges
        badges: {
            display: String,// 'grid' },
            top: String,// '0.4rem' },
            left: String,// '0.4rem' },
            borderRadius: String,// '0.5rem' },
            backgroundColors: [String],// ['red', 'orangered', 'orange'] },
            color: String,// '#fff' },
            fontSize: String,// '2rem' },
            badgeWidth: String,// '5rem' },
            badgeHeight: String,// '3.5rem' },
            badges: [String],// [] },
            paddingBetween: String,// '0.5rem' },
        },
        // Timer bar
        timerBar: {
            display: String,
            position: String,
            height: String,
            width: String,
            top: String,
            right: String,
            bottom: String,
            left: String,
            backgroundColor: String,
            transition: String,
        },
        marker: {
            type: { type: String },
            autoPlay: Boolean,
            display: String,
            duration: Number,
            border: String,
            boxShadow: String,
            stopOnHover: String,
            /////////////////
            position: String,
            display: String,
            top: String,
            right: String,
            bottom: String,
            left: String,
            height: String,
            width: String,
            borderRadius: String,
            backgroundColor: String,
            transition: String,
            transform: String,
            direction: String,
            zIndex: String,
            hover: {
                transform: String,
                left: String,
                width: String,
            }
        },
        // swiper
        swiper: {
            swipable: Boolean,//true },
            direction: String,// 'X' },
            flexDirection: String,
            justifyContent: String,
            skip: Number,// 1 },
            skipMore: Number,// 0 },
            chevrons: {
                display: String,// 'none' },
                color: String,// '#fff' },
                height: String,// '8rem' },
                width: String,// '4rem' },
                backgroundColor: String,// '#00000040' },
                hoverBackgroundColor: String,// '#00000060' },
                border: String,
                autoToggle: Boolean,//true },
                boxShadow: String,//true },
            },
            autoPlay: {
                duration: String,// '2000' },
                run: Boolean,//false },
                stopOnHover: Boolean,//false },
            },
            scroll: {
                behavior: String,// 'auto' },
                autoToggle: Boolean,//true },
            },
            bullets: {
                display: String,// 'flex' },
                bottom: String,// '1rem' },
                paddingBetween: String,// '0.8rem' },
                fontSize: String,// '1rem' },
            }
        }
    }]
})

const slideSchema = {
    padding: String,
    margin: String,
    flexDirection: String,
    alignItems: String,
    justifyContent: String,
    border: String,
    borderRadius: String,
    fontSize: String,
    beforeColor: String,
    afterColor: String,
    beforeBackgroundColor: String,
    afterBackgroundColor: String,
    transition: String,
    event: String,
    textBorder: {
        top: String,
        right: String,
        bottom: String,
        left: String,
        height: String,
        width: String,
        borderRadius: String,
        beforeBackgroundColor: String,
        afterBackgroundColor: String,
        beforeTransform: String,
        afterTransform: String,
        transition: String
    },
    icon: {
        display: String,
        beforeColor: String,
        afterColor: String,
        fontSize: String
    },
}

const LiteBoxSchema = new mongoose.Schema({
    active: Boolean,
    type: { type: String, default: 'LiteBox' },
    name: { type: String, unique: true },
    position: String,
    top: String,
    right: String,
    bottom: String,
    left: String,
    flexDirection: String,
    justifyContent: String,
    alignItems: String,
    backgroundColor: String,
    border: String,
    borderRadius: String,
    padding: String,
    maxWidth: String,
    minWidth: String,
    beforeBoxShadow: String,
    afterBoxShadow: String,
    beforeTransform: String,
    afterTransform: String,
    zIndex: String,
    title: slideSchema,
    slide: slideSchema,
    swipable: Boolean,
    transition: String,
    event: String,
    timerBar: {
        backgroundColor: String,
        height: String,
        position: String,
        top: String,
        right: String,
        bottom: String,
        left: String,
        transition: String,
    },
    closeBtn: {
        color: String,
        fontSize: String,
        top: String,
        right: String,
        bottom: String,
        left: String,
    }
})

const AddToCart = mongoose.model("AddToCart", addToCartSchema)
const Title = mongoose.model("Title", TitleSchema)
const MagicBox = mongoose.model("MagicBox", MagicBoxSchema)
const LiteBox = mongoose.model("LiteBox", LiteBoxSchema)

export { Title, MagicBox, AddToCart, LiteBox }

